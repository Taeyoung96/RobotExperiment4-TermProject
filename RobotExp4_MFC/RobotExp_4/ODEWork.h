//////////////////////////////////////////////////////////////////////////////////////////////////////////
// File		: ODEWork.h
// Version	: 1.0.1
// Date		: 2019.08.22
// Writer	: Lee, Seungmin (CDSL)
//////////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef _ODEWORK_H__
#define _ODEWORK_H__

//include//
#include "WorkBase.h"
#include "SharedMemory.h"


//////////////////////////////////////////////////////////////////////////////////////////////////////////
// Class Name	: CWorkBase : public CWorkBase
// Summury		: ODE work class.
//////////////////////////////////////////////////////////////////////////////////////////////////////////
class CODEWork : public CWorkBase {

	// Define ////////////////////////////////////////////////////////
public:

protected:

private:


	// Method ////////////////////////////////////////////////////////
public:
	////////////////////////////////////////////////////////////////////////////////////////////
	// Method	: CODEWork
	// Input	: Work name(std::string)
	// Output	: None
	// Summury	: Constructor.
	////////////////////////////////////////////////////////////////////////////////////////////
	CODEWork(std::string name);



	////////////////////////////////////////////////////////////////////////////////////////////
	// Method	: ~CWorkBase
	// Input	: None
	// Output	: None
	// Summury	: Standard destructor
	////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~CODEWork();



	////////////////////////////////////////////////////////////////////////////////////////////
	// Method	: SetWindowSize
	// Input	: Window width, height(size_t)
	// Output	: None
	// Summury	: Set size of ODE window.
	////////////////////////////////////////////////////////////////////////////////////////////
	void SetWindowSize(size_t width, size_t height);



	////////////////////////////////////////////////////////////////////////////////////////////
	// Method	: SetSharedMemory
	// Input	: Memory pointer(CSyncSharedMemory*)
	// Output	: None
	// Summury	: Set shared memory block.
	////////////////////////////////////////////////////////////////////////////////////////////
	void SetSharedMemory(CSyncSharedMemory* poMemory);


protected:
	////////////////////////////////////////////////////////////////////////////////////////////
	// Method	: _execute(virtual)
	// Input	: None
	// Output	: None
	// Summury	: Execute ode work.
	////////////////////////////////////////////////////////////////////////////////////////////
	virtual void _execute();

private:


	// Member ////////////////////////////////////////////////////////
public:

protected:

private:
	CSyncSharedMemory *_poSharedMemory;
	size_t _width, _height;
};


#endif